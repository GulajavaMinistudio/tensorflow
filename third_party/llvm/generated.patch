Auto generated patch. Do not edit or delete it, even if empty.
diff -ruN --strip-trailing-cr a/mlir/test/mlir-opt/debugcounter.mlir b/mlir/test/mlir-opt/debugcounter.mlir
--- a/mlir/test/mlir-opt/debugcounter.mlir
+++ b/mlir/test/mlir-opt/debugcounter.mlir
@@ -1,15 +1,16 @@
-// This test exercise the example in docs/ActionTracing.md ; changes here should
-// probably be reflected there.
+// This test exercises the example in docs/ActionTracing.md ; changes here
+// should probably be reflected there.
 
-// RUN: mlir-opt %s -mlir-debug-counter=unique-tag-for-my-action-skip=-1 -mlir-print-debug-counter --pass-pipeline="builtin.module(func.func(canonicalize))" --mlir-disable-threading 2>&1 | FileCheck %s --check-prefix=CHECK-UKNOWN-TAG
+// REQUIRES: asserts
+// RUN: mlir-opt %s -mlir-debug-counter=unique-tag-for-my-action-skip=-1 -mlir-print-debug-counter --pass-pipeline="builtin.module(func.func(canonicalize))" --mlir-disable-threading 2>&1 | FileCheck %s --check-prefix=CHECK-UNKNOWN-TAG
 // RUN: mlir-opt %s -mlir-debug-counter=pass-execution-skip=1 -mlir-print-debug-counter --pass-pipeline="builtin.module(func.func(canonicalize))" --mlir-disable-threading 2>&1 | FileCheck %s --check-prefix=CHECK-PASS
 
 func.func @foo() {
     return
 }
 
-// CHECK-UKNOWN-TAG:  DebugCounter counters:
-// CHECK-UKNOWN-TAG: unique-tag-for-my-action        : {0,-1,-1}
+// CHECK-UNKNOWN-TAG:  DebugCounter counters:
+// CHECK-UNKNOWN-TAG: unique-tag-for-my-action        : {0,-1,-1}
 
 // CHECK-PASS: DebugCounter counters:
 // CHECK-PASS: pass-execution                  : {1,1,-1}
diff -ruN --strip-trailing-cr a/utils/bazel/llvm-project-overlay/libc/BUILD.bazel b/utils/bazel/llvm-project-overlay/libc/BUILD.bazel
--- a/utils/bazel/llvm-project-overlay/libc/BUILD.bazel
+++ b/utils/bazel/llvm-project-overlay/libc/BUILD.bazel
@@ -156,7 +156,12 @@
 libc_support_library(
     name = "__support_cpp_functional",
     hdrs = ["src/__support/CPP/functional.h"],
-    deps = [":libc_root"],
+    deps = [
+        "__support_cpp_type_traits",
+        "__support_cpp_utility",
+        "__support_macros_attributes",
+        ":libc_root",
+    ],
 )
 
 libc_support_library(
@@ -214,6 +219,7 @@
     hdrs = ["src/__support/CPP/utility.h"],
     deps = [
         ":__support_cpp_type_traits",
+        ":__support_macros_attributes",
         ":libc_root",
     ],
 )
